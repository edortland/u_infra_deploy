{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    //General Parameters
    "EnvironmentPrefix": {
      "type": "string",
      "allowedValues": [
        "usgt",
        "usgx",
        "usgp",
        "usgd"
      ],
      "metadata": {
        "description": "The prefix of the environment you are deploying"
      }
    },
    "VMfunctionNameShortcut": {
      "type": "string",
      "metadata": {
        "description": "the 3 letter code to tell what kind of server i.e. web, sql, dc, fs etc"
      }
    },
    "sqlServerServiceAccountUserName": {
      "type": "string",
      "metadata": {
        "description": "SQL Service account"
      }
    },
    "sqlServerServiceAccountPassword": {
      "type": "string",
      "metadata": {
        "description": "SQL Service account password"
      }
    },
    "AdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username of the administrator account"
      }
    },


    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "ScriptLocation": {
      "type": "string",
      "metadata": {
        "description": "The location of resources such as  and DSC modules that the script is dependent"
      }
    },

    //Storage account info
    "VMnormalStorageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Name prefix of the normal storage accounts"
      }
    },
    "VMFastStorageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Name prefix of the fast storage accounts"
      }
    },
    "VMDiagStorageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Name prefix of the diag storage accounts"
      }
    },
    //Availability Set information
    "AvailabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "Name of AvailabilitySet that will host the SQL Servers"
      }
    },
    "AvailabilitySetFaultDomainCount": {
      "type": "int",
      "metadata": {
        "description": "Amount of fault domains in the availabilityset"
      }
    },
    "AvailabilitySetUpdateDomainCount": {
      "type": "int",
      "metadata": {
        "description": "Amount of update domains in the availabilityset"
      }
    },
    //SQL Internal load balancing specific
    "SQLLBIPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP address used to connect to the SQL Availibility group listener"
      }
    },
    //Subnet that will hold the SQL Servers
    "subNet": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet in which the front end webservers need to be deployed"
      }
    },

    //Databases that are running on the availbility group
    "dataBaseNames": {
      "type": "array",
      "metadata": {
        "description": "An array of databases name, each database will be created and added to the availability group"
      },
      "defaultValue": [
        "testdb1",
        "testdb2"
      ]
    }
  },
  "variables": {

    //Public IP address resource specific
    "publicIPAddressName": "[concat(parameters('EnvironmentPrefix'),parameters('AvailabilitySetName'),'_pubip')]",
    "PubIpdnsPrefix": "[concat(parameters('EnvironmentPrefix'),parameters('AvailabilitySetName'))]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",

    //Loadbalancer
    "lbName": "[concat(parameters('EnvironmentPrefix'),parameters('AvailabilitySetName'),'_lb_001')]",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('LBName'))]",
    "lbFEConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/','LoadBalancerFrontEnd')]",
    "lbProbeID": "[concat(variables('lbID'),'/probes/','sqlAOProbe')]",
    "lbBEAddressPoolID": "[concat(variables('lbID'),'/backendAddressPools/','BackendPool1')]",
    //Network info
    "vNETname": "[concat(parameters('EnvironmentPrefix'),'_',resourceGroup().location,'_001')]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vNETname'))]",
    "SubnetRef": "[concat(variables('VnetID'),'/subnets/',parameters('Subnet'))]",

    //VM naming
    "VMNamePrefix": "[concat(parameters('EnvironmentPrefix'),parameters('VMfunctionNameShortcut'),'0')]",
    "NicNamePrefix": "[concat(variables('VMNamePrefix'),'0')]",
    "VMNameWitness": "[concat(parameters('EnvironmentPrefix'),parameters('VMfunctionNameShortcut'),'01')]"

    //OS imaging info
    "windowsImagePublisher": "MicrosoftWindowsServer",
    "windowsImageOffer": "WindowsServer",
    "windowsImageSKU": "2012-R2-Datacenter",
    "sqlImagePublisher": "MicrosoftSQLServer",
    "sqlImageOffer": "SQL2014-WS2012R2",
    "sqlImageSKU": "Enterprise",

    //VM sizes
    "sqlVMSize": "Standard_DS3",
    "witnessVMSize": "Standard_DS1",
    "SQLDataDiskSize": 100,
    "SQLLogDiskSize": 50,
    "DataDiskSize": 50,

    //Script module information
    "fswModulesURL": "[concat(parameters('ScriptLocation'),'/CreateFileShareWitness.ps1.zip')]",
    "fswConfigurationFunction": "CreateFileShareWitness.ps1\\CreateFileShareWitness",
    "sqlAOPrepareModulesURL": "[concat(parameters('ScriptLocation'),'/PrepareAlwaysOnSqlServer.ps1.zip')]",
    "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
    "createClusterModulesURL": "[concat(parameters('ScriptLocation'),'/CreateFailoverCluster.ps1.zip')]",
    "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster",

    //AG and clusternaming
    "sqlAOEPName": "sqlaoe01",
    "sqlAOAGName": "sqlaoag01",
    "clusterName": "sqlcl01",

    "numberOfInstances": 2, //you can't just simple increase this to 4 to create a 4 node cluster
    "DomainName": "[concat(parameters('EnvironmentPrefix'),'.local')]"
    
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('AvailabilitySetName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Availability set"
      },
      "properties": {
        "platformFaultDomainCount": "[parameters('AvailabilitySetFaultDomainCount')]",
        "platformUpdateDomainCount": "[parameters('AvailabilitySetUpdateDomainCount')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Public Ip address"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('PubIpdnsPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Loadbalancer"
      },
      "dependsOn": [
       
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('SQLLBIPAddress')]",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "sqlAOListener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbFEConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('lbBEAddressPoolID')]"
              },
              "probe": {
                "id": "[variables('lbProbeID')]"
              },
              "protocol": "tcp",
              "frontendPort": 1433,
              "backendPort": 1433,
              "enableFloatingIP": true
            }
          }
        ],
        "probes": [
          {
            "name": "sqlAOProbe",
            "properties": {
              "protocol": "tcp",
              "port": 59999,
              "intervalInSeconds": "5",
              "numberOfProbes": "2"
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('NicNameprefix'), copyindex(1),'nic001')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NICS for SQL Server cluster nodes"
      },
      "apiVersion": "2015-05-01-preview",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        
        "[concat('Microsoft.Network/loadBalancers/',variables('lbName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('lbBEAddressPoolID')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('VMNameWitness'),'nic001')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NICS for SQL Server witness server"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/',variables('LBName'))]"
      ],
      "apiVersion": "2015-05-01-preview",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmNamePrefix'), copyindex(1))]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VMs for SQL Server cluster nodes"
      },
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [

        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('NicNameprefix'), copyindex(1),'nic001'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitySetName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('sqlVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitySetName'))]"
        },
        "osProfile": {
          "computername": "[concat(variables('vmNamePrefix'), copyindex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('sqlImagePublisher')]",
            "offer": "[variables('sqlImageOffer')]",
            "sku": "[variables('sqlImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('VMFastStorageAccountNamePrefix'),copyindex(1),'.blob.core.windows.net/',variables('vmNamePrefix'), copyindex(1),'/',variables('vmNamePrefix'), copyindex(1), '_osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',parameters('VMFastStorageAccountNamePrefix'),copyindex(1),'.blob.core.windows.net/',variables('vmNamePrefix'), copyindex(1),'/',variables('vmNamePrefix'), copyindex(1), '_sqldatadisk1.vhd')]"
              },
              "name": "[concat(variables('vmNamePrefix'), copyindex(1),'_sqldatadisk1')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('sqlDataDiskSize')]",
              "lun": 0
            },
            {
              "vhd": {
                "uri": "[concat('http://',parameters('VMFastStorageAccountNamePrefix'),copyindex(1),'.blob.core.windows.net/',variables('vmNamePrefix'), copyindex(1),'/',variables('vmNamePrefix'), copyindex(1), '_sqllogdisk1.vhd')]"
              },
              "name": "[concat(variables('vmNamePrefix'), copyindex(1),'_sqllogdisk1')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('sqlLogDiskSize')]",
              "lun": 1
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('NicNameprefix'), copyindex(1),'nic001'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('VMNameWitness')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VM for SQL Server witness server"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('VMNameWitness'),'nic001'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitySetName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('witnessVMSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitySetName'))]"
        },
        "osProfile": {
          "computername": "[variables('VMNameWitness')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('windowsImagePublisher')]",
            "offer": "[variables('windowsImageOffer')]",
            "sku": "[variables('windowsImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('VMFastStorageAccountNamePrefix'),'2.blob.core.windows.net/',variables('VMNameWitness'),'/',variables('VMNameWitness'),'_osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "vhd": {
                "uri": "[concat('http://',parameters('VMFastStorageAccountNamePrefix'),'2.blob.core.windows.net/',variables('VMNameWitness'),'/', variables('VMNameWitness'),'_datadisk1.vhd')]"
              },
              "name": "[concat(variables('VMNameWitness'),'_datadisk1')]",
              "caching": "None",
              "createOption": "empty",
              "diskSizeGB": "[variables('DataDiskSize')]",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('VMNameWitness'),'nic001'))]"
            }
          ]
        }
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('VMNameWitness'),'/CreateFileShareWitness')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Create fileshare for witness"
      },
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdateSQLWNic",
        "[concat('Microsoft.Compute/virtualMachines/', variables('VMNameWitness'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.0",
        "settings": {
          "modulesUrl": "[variables('fswModulesURL')]",
          "configurationFunction": "[variables('fswConfigurationFunction')]",
          "properties": {
            "domainName": "[variables('domainName')]",
            "sharePath": "\test",
            "adminCreds": {
              "userName": "[parameters('adminUserName')]",
              "password": "PrivateSettingsRef:adminPassword"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('VMNamePrefix'),'1/sqlAOPrepare')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Prepare cluster"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('VMNamePrefix'),'1')]",
        "[concat('Microsoft.Compute/virtualMachines/',variables('VMNameWitness'),'/extensions/CreateFileShareWitness')]"
        
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.0",
        "settings": {
          "modulesUrl": "[variables('sqlAOPrepareModulesURL')]",
          "configurationFunction": "[variables('sqlAOPrepareConfigurationFunction')]",
          "properties": {
            "domainName": "[variables('domainName')]",
            "sqlAlwaysOnEndpointName": "[variables('sqlAOEPName')]",
            "adminCreds": {
              "userName": "[parameters('adminUserName')]",
              "password": "PrivateSettingsRef:adminPassword"
            },
            "sqlServiceCreds": {
              "userName": "[parameters('sqlServerServiceAccountUserName')]",
              "password": "PrivateSettingsRef:sqlServerServiceAccountPassword"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]",
            "sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('VMNamePrefix'),'1/CreateCluster')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Create Cluster"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('VMNamePrefix'),'2')]",
        "[concat('Microsoft.Compute/virtualMachines/',variables('VMNamePrefix'),'1/extensions/sqlAOPrepare')]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.0",
        "settings": {
          "modulesUrl": "[variables('createClusterModulesURL')]",
          "configurationFunction": "[variables('createClusterConfigurationFunction')]",
          "properties": {
            "domainName": "[variables('domainName')]",
            "clusterName": "[variables('clusterName')]",
            "sharePath": "[concat('\\'',variables('VMnameWitness'),'\test')]",
            "nodes": [
              "[concat(variables('VMNamePrefix'),'1')]",
              "[concat(variables('VMNamePrefix'),'2')]"
            ],
            "sqlAlwaysOnEndpointName": "[variables('sqlAOEPName')]",
            "sqlAlwaysOnAvailabilityGroupName": "[variables('sqlAOAGName')]",
            "sqlAlwaysOnAvailabilityGroupListenerName": "[variables('sqlAOListenerName')]",
            "sqlAlwaysOnAvailabilityGroupListenerPort": 1433,
            "lbName": "[variables('LBName')]",
            "lbAddress": "[parameters('sqlLBIPAddress')]",
            "primaryReplica": "[concat(variables('VMNamePrefix'),'2')]",
            "secondaryReplica": "[concat(variables('VMNamePrefix'),'1')]",
            "databaseNames": "[parameters('databaseNames')]",
            "dnsServerName": "[concat(parameters('EnvironmentPrefix'),'dc01.local')]",
            "adminCreds": {
              "userName": "[parameters('adminUserName')]",
              "password": "PrivateSettingsRef:adminPassword"
            },
            "sQLServiceCreds": {
              "userName": "[parameters('sqlServerServiceAccountUserName')]",
              "password": "PrivateSettingsRef:sqlServerServiceAccountPassword"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]",
            "sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
          }
        }
      }
    }
  ]
}